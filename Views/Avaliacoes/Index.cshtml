@model IEnumerable<RyujinBites.Models.Lanchonete.Avaliacao>

@{
    ViewData["Title"] = "Avaliações de Produtos"; // Título da página
}

@using Microsoft.AspNetCore.Identity
@using RyujinBites.Models.Identity
@inject UserManager<ApplicationUser> UserManager

<div class="row">
    <div class="col-12">
        <div class="row my-4">
            <div class="new col-md-6">
                <nav aria-label="breadcrumb" class="pr-3 py-2">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item">
                            <a href="/" class="text-decoration-none text-dark">
                                <i class="material-icons align-middle">home</i> <span class="align-middle">Home</span>
                            </a>
                        </li>
                        <li class="breadcrumb-item active text-primary" aria-current="page">
                            Avaliações de Produtos
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>

    <div class="new justify-content-between">

<h4>Avaliações</h4>

<div class="new gap-4">

<p>
    <a asp-action="Create" class="btn btn-success">Criar Nova Avaliação</a>
</p>

@if (User.IsInRole("Administrador"))
{
    <p>
        <a asp-action="Denuncias" class="btn btn-warning">Ver Avaliações Denunciadas</a>
    </p>
}
</div>
    </div>

<div class="ms-content-wrapper">
            <div class="col-xl-12 col-md-12">
            <div class="ms-panel ms-panel-fh">
                <div class="ms-panel-body p-0">
                    <div class="row">
                        @if (!Model.Any())
                        {
                            <div class="col-12 text-center py-4">
                                <p class="text-muted">Não há avaliações disponíveis no momento.</p>
                            </div>
                        }
                        else
                        {
                            foreach (var item in Model)
                            {
                                <div class="col-md-6 mb-4">
                                    <div class="card shadow-sm h-100">
                                        <div class="card-body">
                                            <div class="d-flex align-items-center mb-3">
                                                <img src="https://www.gravatar.com/avatar/@(Guid.NewGuid().ToString("N"))?d=identicon&s=80"
                                                     class="rounded-circle me-3" width="30" height="30" alt="Cliente" />
                                                <div>
                                                    <h6 class="mb-0">@item.Cliente.ApplicationUser.Nome</h6>
                                                    <small class="text-muted">Produto: @item.Produto.Nome</small>
                                                </div>
                                            </div>

                                            <ul class="ms-star-rating rating-fill rating-circle ratings-new mb-2">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <li class="ms-rating-item @(item.Pontuacao >= i ? "rated" : "")">
                                                        <i class="material-icons">star</i>
                                                    </li>
                                                }
                                            </ul>

                                            <p class="mb-1"><i class="material-icons me-1">date_range</i> @item.DataAvaliacao.ToShortDateString()</p>
                                            <p class="text-muted">@item.Comentario</p>

                                            @if (item.IsReported)
                                            {
                                                <p class="text-warning mb-2">
                                                    <i class="fas fa-exclamation-triangle me-2"></i> Esta avaliação foi denunciada.
                                                </p>
                                            }

                                            <div class="d-flex flex-wrap justify-content-between align-items-center">
                                                <small><i class="material-icons">email</i> @item.Cliente.ApplicationUser.Email</small>
                                                <div class="mt-2 mt-md-0 d-flex gap-2">
                                                    
                                                    @if (item.ClienteId == UserManager.GetUserId(User) || User.IsInRole("Administrador"))
                                                    {
                                                        <a href="#" class="btn btn-sm btn-warning editAvaliacaoBtn" data-id="@item.AvaliacaoId" title="Editar">
                                                            <i class="material-icons">edit</i>
                                                        </a>
                                                        <a href="#" class="btn btn-sm btn-danger deleteAvaliacaoBtn" data-id="@item.AvaliacaoId" title="Deletar">
                                                            <i class="material-icons">delete</i>
                                                        </a>
                                                    }

                                                    @if (item.ClienteId != UserManager.GetUserId(User) && !item.IsReported && User.Identity.IsAuthenticated)
                                                    {
                                                        <a href="#" class="btn btn-sm btn-outline-warning denunciarBtn" data-id="@item.AvaliacaoId" title="Denunciar">
                                                            <i class="material-icons">report_problem</i>
                                                        </a>
                                                    }
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="avaliacaoModal" tabindex="-1" aria-labelledby="avaliacaoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="avaliacaoModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @Html.AntiForgeryToken()

    <script>
        $(document).ready(function () {
            // Função genérica para carregar e exibir modais
            function loadModal(actionName, id, title, postActionName) {
                var urlForGet = `@Url.Action("__ACTION__", "Avaliacaos", new { id = "__ID__" })`
                    .replace('__ACTION__', actionName)
                    .replace('__ID__', id || '');

                $('#avaliacaoModalLabel').text(title);
                $('#avaliacaoModal .modal-body').load(urlForGet, function () {
                    $('#avaliacaoModal').modal('show');

                    $('#avaliacaoModal .modal-body form').on('submit', function (e) {
                        e.preventDefault();

                        var form = $(this);
                        var formData = form.serialize();
                        var dataWithToken = formData + '&__RequestVerificationToken=';

                        var urlForPost = `@Url.Action("__POST_ACTION__", "Avaliacaos", new { id = "__ID__" })`
                            .replace('__POST_ACTION__', postActionName)
                            .replace('__ID__', id || '');

                        $.ajax({
                            url: urlForPost,
                            type: 'POST',
                            data: dataWithToken,
                            success: function (result) {
                                if (result.success) {
                                    alert(result.message);
                                    $('#avaliacaoModal').modal('hide');
                                    location.reload();
                                } else {
                                    alert('Erro: ' + result.message);
                                }
                            },
                            error: function (xhr, status, error) {
                                alert('Ocorreu um erro: ' + error + '\n' + xhr.responseText);
                            }
                        });
                    });
                });
            }

            // Eventos de clique para os botões/links
            $('.createAvaliacaoBtn').on('click', function (e) { e.preventDefault(); loadModal('Create', null, 'Criar Nova Avaliação', 'Create'); });
            $('.detailsAvaliacaoBtn').on('click', function (e) { e.preventDefault(); var id = $(this).data('id'); loadModal('Details', id, 'Detalhes da Avaliação', 'Details'); });
            $('.editAvaliacaoBtn').on('click', function (e) { e.preventDefault(); var id = $(this).data('id'); loadModal('Edit', id, 'Editar Avaliação', 'Edit'); });
            $('.deleteAvaliacaoBtn').on('click', function (e) { e.preventDefault(); var id = $(this).data('id'); loadModal('Delete', id, 'Deletar Avaliação', 'Delete'); });

            // Script para o botão Denunciar (já existente)
            $('.denunciarBtn').on('click', function (e) {
                e.preventDefault();
                var avaliacaoId = $(this).data('id');
                if (confirm('Tem certeza de que deseja denunciar esta avaliação?')) {
                    $.ajax({
                        url: '@Url.Action("Denunciar", "Avaliacaos")',
                        type: 'POST',
                        data: {
                            id: avaliacaoId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result) {
                            if (result.success) {
                                alert(result.message);
                                location.reload();
                            } else {
                                alert('Erro ao denunciar: ' + result.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('Ocorreu um erro: ' + error + '\n' + xhr.responseText);
                        }
                    });
                }
            }); 
        });
    </script>
}